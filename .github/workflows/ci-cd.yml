name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # 1. Repoyu checkout et
    - name: Checkout kodu
      uses: actions/checkout@v3

    # 2. Python ortamını kur
    - name: Python'u kur
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # 3. Bağımlılıkları yükle
    - name: Bağımlılıkları yükle
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # 4. Basit bir test çalıştır (örneğin, uygulamanın çalıştığını kontrol et)
    - name: Testleri çalıştır
      run: |
        python -m flask run & sleep 5
        curl http://localhost:5000

    # 5. Docker imajını oluştur
    - name: Docker imajını oluştur
      run: |
        docker build -t myapp:latest .

    # 6. Docker Hub'a login (opsiyonel, deploy için)
    - name: Docker Hub'a login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 7. Docker imajını Docker Hub'a push et
    - name: Docker imajını push et
      run: |
        docker tag myapp:latest ${{ secrets.DOCKER_USERNAME }}/myapp:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    # 8. Ansible ile deployment (örneğin, bir sunucuya deploy)
    - name: Checkout kodu
      uses: actions/checkout@v3

    - name: Ansible'ı kur
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible

    - name: Ansible playbook'u çalıştır
      run: |
        ansible-playbook -i inventory.yml playbook.yml